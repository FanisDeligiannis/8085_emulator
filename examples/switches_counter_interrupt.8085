; This program counts how many bits of the SWITCHES are set
; and outputs it in the LEDs WHEN the INTR button is pressed.

; For example: If switches are: 10101010
; There are 4 bits set (4 bits are 1)
; So the output in the LEDs will be: 00000100 (= 4 in dec).

BIT_COUNTER EQU B ; BIT_COUNTER will be Register B
BITS_LEFT EQU C ; How many bits we have left will be Register C

TEMP EQU D ; Temporary, so we can do calculations on accumulator
		   ; But keeping its value

SWITCHES EQU 20H ; Switches are at location 20H
LEDS EQU 30H ; LEDS are at location 30H

EI ; Enable interrupts

HALT_FOREVER:
	HLT
	JMP HALT_FOREVER ; After the interrupt, 
	; The cpu will execute the next line after HLT
	; So we need to keep running HLT forever.

INTR_ROUTINE:
	CALL COUNT ; Call count

	RET ; Return to where we were in the program


COUNT:

	IN SWITCHES ; Get value of switches
	
	MVI BIT_COUNTER,00H ; We start at 0
	MVI BITS_LEFT,08H ; We have 8 bits left

	LOOP:
		MOV TEMP,A ; Save A
	
		ANI 00000001B ; Only keep LSB
		CPI 01 ; Is it 1?
		
		JNZ CONTINUE ; If not, CONTINUE
		
		INR BIT_COUNTER ; If yes, increase BIT_COUNTER
		
	CONTINUE:
	
		MOV A,TEMP ; Get our A back
		RLC ; Rotate left, that way we go to our next bit.
		
		DCR BITS_LEFT ; Decrease BITS_LEFT because we just calculated one.
		JNZ LOOP ; If BITS_LEFT is NOT 0, we go to our LOOP again.
	
	
	MOV A,BIT_COUNTER ; Get BIT_COUNTER to A
	OUT LEDS ; Output it to LEDS
	
	RET ; Return
